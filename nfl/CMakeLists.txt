cmake_minimum_required(VERSION 2.8)
project(nfl CXX ASM-ATT)
enable_testing()
if(APPLE)
    cmake_policy(SET CMP0042 NEW)
endif()

message(STATUS "Tring to use optimized version of NFL")
add_definitions(-DNFL_OPTIMIZED)

if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86)|(X86)|(amd64)|(AMD64)")
    set (X86 TRUE)
    message(STATUS "Detected x86 arch")
else()
    set (X86 FALSE)
    if (CMAKE_SYSTEM_PROCESSOR MATCHES "(arm)|(ARM)|(arm64)|(ARM64)")
        set (ARM TRUE)
        message(STATUS "Detected ARM arch")
    else()
        set (ARM FALSE)
        message(FATAL_ERROR "Unknown arch")
    endif()
endif()

include(CheckCXXSourceCompiles)
set(CMAKE_CXX_FLAGS_OLD ${CMAKE_CXX_FLAGS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")

if (X86)
    check_cxx_source_compiles("#include <immintrin.h>\nint main() { return 0;}" NFLLIB_USE_AVX)
    check_cxx_source_compiles("#include <pmmintrin.h>\nint main() { return 0;}" NFLLIB_USE_SSE)
elseif (ARM)
    check_cxx_source_compiles("#include <arm_neon.h>\nint main() { return 0;}" NFLLIB_USE_NEON)
endif()

if(NFLLIB_USE_AVX)
  message(STATUS "Using AVX vector engine")
  add_definitions(-DNTT_AVX2)
elseif(NFLLIB_USE_SSE)
  message(STATUS "Using SSE vector engine")
  add_definitions(-DNTT_SSE)
elseif(NFLLIB_USE_NEON)
  message(STATUS "Using NEON vector engine")
  add_definitions(-DNTT_NEON)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfpu=neon -ftree-vectorize")
endif()

include_directories(include include/nfl include/nfl/arch include/nfl/opt include/nfl/opt/arch include/nfl/prng)

if (X86)
    set(NFLLIB_ASMS lib/prng/nfl_crypto_stream_salsa20_amd64_xmm6.s)
elseif (ARM)
    set(NFLLIB_ASMS lib/prng/nfl_crypto_stream_salsa20_arm32_xmm6.s)
endif()
file(GLOB NFLLIB_SRCS lib/prng/*.cpp lib/params/*.cpp)
file(GLOB NFLLIB_HDRS_0 include/nfl.hpp)
file(GLOB NFLLIB_HDRS_1 include/nfl/*.hpp)
file(GLOB NFLLIB_HDRS_2 include/nfl/arch/*.hpp)
file(GLOB NFLLIB_HDRS_3 include/nfl/opt/*.hpp)
file(GLOB NFLLIB_HDRS_4 include/nfl/opt/arch/*.hpp)
file(GLOB NFLLIB_PRNG_HDRS include/nfl/prng/*.hpp include/nfl/prng/*.h)

# shared library
add_library(nfllib SHARED ${NFLLIB_ASMS} ${NFLLIB_SRCS})
target_link_libraries(nfllib ${GMP_LIBRARY} ${MPFR_LIBRARY})
install(TARGETS nfllib LIBRARY DESTINATION lib)

# static library
add_library(nfllib_static STATIC ${NFLLIB_ASMS} ${NFLLIB_SRCS})
target_link_libraries(nfllib_static ${GMP_LIBRARY} ${MPFR_LIBRARY})
install(TARGETS nfllib_static ARCHIVE DESTINATION lib)

install(FILES ${NFLLIB_} DESTINATION include)
install(FILES ${NFLLIB_HDRS_0} DESTINATION include)
install(FILES ${NFLLIB_HDRS_1} DESTINATION include/nfl)
install(FILES ${NFLLIB_HDRS_2} DESTINATION include/nfl/arch)
install(FILES ${NFLLIB_HDRS_3} DESTINATION include/nfl/opt)
install(FILES ${NFLLIB_HDRS_4} DESTINATION include/nfl/opt/arch)
install(FILES ${NFLLIB_PRNG_HDRS} DESTINATION include/nfl/prng)

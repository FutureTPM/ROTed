cmake_minimum_required(VERSION 2.8)
project(blake3 C ASM)

if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86)|(X86)|(amd64)|(AMD64)")
    set (X86 TRUE)
    message(STATUS "Detected x86 arch")
else()
    set (X86 FALSE)
    if (CMAKE_SYSTEM_PROCESSOR MATCHES "(arm)|(ARM)|(arm64)|(ARM64)")
        set (ARM TRUE)
        message(STATUS "Detected ARM arch")
    else()
        set (ARM FALSE)
        message(FATAL_ERROR "Unknown arch")
    endif()
endif()

if (X86)
    check_cxx_source_compiles("#include <immintrin.h>\nint main() { __m512i avx_2p  = _mm512_set1_epi16(16 << 1); __m512i avx_t0  = _mm512_add_epi16(avx_2p, avx_2p); return 0;}" NFLLIB_USE_AVX512)
    check_cxx_source_compiles("#include <immintrin.h>\nint main() { return 0;}" NFLLIB_USE_AVX)
    check_cxx_source_compiles("#include <pmmintrin.h>\nint main() { return 0;}" NFLLIB_USE_SSE)
elseif (ARM)
    check_cxx_source_compiles("#include <arm_neon.h>\nint main() { return 0;}" NFLLIB_USE_NEON)
else()
    message(STATUS "Disabling vector engine auto detection. User specified vector engine as ${VECTOR_ENGINE}")
endif()

set(BLAKE3_SRCS blake3.c blake3_dispatch.c blake3_portable.c)

if (X86)
    set(BLAKE3_ASMS blake3_avx2_x86-64_unix.S blake3_sse2_x86-64_unix.S blake3_sse41_x86-64_unix.S blake3_avx512_x86-64_unix.S)
elseif (ARM)
    set(BLAKE3_SRCS ${BLAKE3_SRCS} blake3_neon.c)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfpu=neon -ftree-vectorize -flax-vector-conversions")
endif()

file(GLOB BLAKE3_HDRS *.h)

add_library(blake3 SHARED ${BLAKE3_ASMS} ${BLAKE3_SRCS})
install(TARGETS blake3 LIBRARY DESTINATION lib)

add_library(blake3_static STATIC ${BLAKE3_ASMS} ${BLAKE3_SRCS})
install(TARGETS blake3_static ARCHIVE DESTINATION lib)

install(FILES ${BLAKE3_} DESTINATION include)
install(FILES ${BLAKE3_HDRS} DESTINATION include)
